<?xml version="1.0" encoding="utf-8"?>
<project:UnitaryProjectPanelClass xmlns:fx="http://ns.adobe.com/mxml/2009"
								  xmlns:s="library://ns.adobe.com/flex/spark"
								  xmlns:mx="library://ns.adobe.com/flex/mx"
								  xmlns:project="com.blueparabola.unitary.project.*"
								  skinClass="com.blueparabola.unitary.skins.UnitaryPanelSkin" 
								  width="100%" height="100%"
								  title="{favouritesModel.projectName}" xmlns:favourites="com.blueparabola.unitary.favourites.*"
								  creationComplete="handleCreationComplete(event)">
	<fx:Script>
		<![CDATA[
			import com.blueparabola.unitary.favourites.FavouriteRunErrorEvent;
			import com.blueparabola.unitary.favourites.FavouritesTestRun;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			protected function handleFavouritesRunError(event:FavouriteRunErrorEvent):void {
				currentState = "Base";
				Alert.show("PHPUnit detected the following error(s) while running:\n" + event.errorString, "PHP Error", Alert.OK, this);
			}
			
			protected function handleFavouritesRunComplete(event:Event):void {
				currentState = "Base";
			}
			
			protected function handleCreationComplete(event:FlexEvent):void {
				favouritesModel.addEventListener("favouritesRunComplete", handleFavouritesRunComplete);
				favouritesModel.addEventListener(FavouriteRunErrorEvent.favouriteRunErrorEvent, handleFavouritesRunError);
			}
			
			protected function runTests():void {
				currentState = "Running";
				favouritesModel.runNewTest();
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<favourites:FavouritesModel	id="favouritesModel" />
	</fx:Declarations>
	
	<project:states>
		<s:State name="Base" />
		<s:State name="Running" />
	</project:states>
	
	<project:controlBarContent>
		<s:Button label="Run Tests" click="runTests()" />
	</project:controlBarContent>
	
	<s:HGroup left="0" right="0" top="0" bottom="0">
		
		<s:filters>
			<mx:BlurFilter blurX="10" blurY="10" includeIn="Running" />
		</s:filters>
		
		<s:DataGrid id="runHistory"
			minWidth="200" height="100%" 
			requestedRowCount="4" 
			textAlign="center" 
			skinClass="com.blueparabola.unitary.skins.UnitaryDataGridSkin"
			dataProvider="{favouritesModel.runHistory}">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn dataField="runDate" headerText="Date" width="130">
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer>
									<s:HGroup verticalAlign="middle" width="100%" height="26">
										<s:Label textAlign="center" text="{data.runDate.toLocaleDateString()}" width="100%" color="{data.testsFailed > 0 ? 0xff4444 : 0x999999}" />
									</s:HGroup>
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					<s:GridColumn dataField="testsSucceeded" headerText="OK" width="50">
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer>
									<s:HGroup verticalAlign="middle" width="100%" height="24">
										<s:Label textAlign="center" text="{data.testsSucceeded}" width="100%" color="{data.testsFailed > 0 ? 0xff4444 : 0x999999}" />
									</s:HGroup>
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
					<s:GridColumn dataField="testsFailed" headerText="Fail" width="50">
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer>
									<s:HGroup verticalAlign="middle" width="100%" height="24">
										<s:Label textAlign="center" text="{data.testsFailed}" width="100%" color="{data.testsFailed > 0 ? 0xff4444 : 0x999999}" />
									</s:HGroup>
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:GridColumn>
				</s:ArrayList>
			</s:columns>
			<s:typicalItem>
				<fx:Object runDate="{new Date('2011/10/11 12:33:45')}" dataField2="12" dataField3="0" dataField4="12"></fx:Object>
			</s:typicalItem>
		</s:DataGrid>
		
		<s:VGroup width="100%" height="100%">
			<s:HGroup height="254" width="100%">
				<mx:PieChart width="50%" height="100%" dataProvider="{FavouritesTestRun(runHistory.selectedItem).chartData}">
					<mx:series>
						<mx:PieSeries labelPosition="callout" labelField="label" field="value" />
					</mx:series>
				</mx:PieChart>
			</s:HGroup>
			<s:DataGrid 
				width="100%" height="100%"
				textAlign="center" 
				skinClass="com.blueparabola.unitary.skins.UnitaryDataGridSkin"
				dataProvider="{FavouritesTestRun(runHistory.selectedItem).executionResults}"
				rowHeight="26">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn dataField="eventType" headerText="Event">
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<s:HGroup verticalAlign="middle" width="100%" height="100%">
											<s:Label text="{data.eventType}" width="100%" color="{data.status == 'pass' ? 0x44ff44 : (data.status == 'fail' ? 0xff4444 : 0x999999)}" />
										</s:HGroup>
									</s:GridItemRenderer>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						<s:GridColumn dataField="testSuite" headerText="Suite">
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<s:HGroup verticalAlign="middle" width="100%" height="100%">
											<s:Label text="{data.testSuite}" width="100%" color="{data.status == 'pass' ? 0x44ff44 : (data.status == 'fail' ? 0xff4444 : 0x999999)}" />
										</s:HGroup>
									</s:GridItemRenderer>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						<s:GridColumn dataField="testName" headerText="Test">
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<s:HGroup verticalAlign="middle" width="100%" height="100%">
											<s:Label text="{data.testName}" width="100%" color="{data.status == 'pass' ? 0x44ff44 : (data.status == 'fail' ? 0xff4444 : 0x999999)}" />
										</s:HGroup>
									</s:GridItemRenderer>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						<s:GridColumn dataField="status" headerText="Status">
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<s:HGroup verticalAlign="middle" width="100%" height="100%">
											<s:Label text="{data.status}" width="100%" color="{data.status == 'pass' ? 0x44ff44 : (data.status == 'fail' ? 0xff4444 : 0x999999)}" />
										</s:HGroup>
									</s:GridItemRenderer>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
						<s:GridColumn dataField="message" headerText="Message">
							<s:itemRenderer>
								<fx:Component>
									<s:GridItemRenderer>
										<s:HGroup verticalAlign="middle" width="100%" height="100%">
											<s:Label text="{data.message}" width="100%" color="{data.status == 'pass' ? 0x44ff44 : (data.status == 'fail' ? 0xff4444 : 0x999999)}" />
										</s:HGroup>
									</s:GridItemRenderer>
								</fx:Component>
							</s:itemRenderer>
						</s:GridColumn>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
		</s:VGroup>
		
	</s:HGroup>

	<s:VGroup left="0" right="0" top="0" bottom="0" includeIn="Running" verticalAlign="middle" horizontalAlign="center">
		<s:Rect width="250" height="100" radiusX="10" radiusY="10">
			<s:fill>
				<s:SolidColor color="0x000000" alpha="0.5" />
			</s:fill>
		</s:Rect>
	</s:VGroup>
	
	<s:VGroup left="0" right="0" top="0" bottom="0" includeIn="Running" verticalAlign="middle" horizontalAlign="center">
		<mx:ProgressBar indeterminate="true" label="Running Testsâ€¦" />
	</s:VGroup>
	
</project:UnitaryProjectPanelClass>
